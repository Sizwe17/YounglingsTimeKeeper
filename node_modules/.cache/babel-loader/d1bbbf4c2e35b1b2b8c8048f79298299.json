{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sizwe Hugo\\\\Desktop\\\\Younglings TimeKeeper\\\\YounglingsTimekeeper-master\\\\src\\\\components\\\\projects\\\\ProjectDetails.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport { deletePost, addComment, storeComments } from \"../../store/actions/postActions\";\nimport _ from \"lodash\";\nimport AddComment from \"./AddComment\";\nimport Comment from \"./Comment\";\nimport { showAlert } from '../layout/alert';\n\nclass PostDetails extends Component {\n  componentWillMount() {\n    const postId = this.props.postId;\n    this.props.storeComments(postId);\n  }\n\n  renderComments() {\n    const _this$props = this.props,\n          postId = _this$props.postId,\n          comments = _this$props.comments;\n    console.log(comments);\n    return _.map(comments, (comment, key) => {\n      if (postId === comment.postId) return React.createElement(Comment, {\n        postId: postId,\n        key: key,\n        comment: comment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, comment.comment);\n    });\n  }\n\n  renderButtons(post) {\n    if (this.props.auth.uid === post.authorId) {\n      return React.createElement(\"div\", {\n        id: \"update-buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn orange lighten-2 z-depth-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Link, {\n        id: \"update-button\",\n        to: \"/update/\" + this.props.postId,\n        className: \"white-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Update\")), React.createElement(\"button\", {\n        onClick: this.onDeletePost.bind(this) //  onClick={this.onDeletePost.bind(this, post.id)}\n        ,\n        className: \"btn orange lighten-2 z-depth-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Delete\"));\n    }\n  }\n\n  onDeletePost() {\n    this.props.deletePost(this.props.postId, () => {});\n    this.props.history.push(\"/\");\n    showAlert('Your post successfully deleted!');\n  }\n\n  render() {\n    const _this$props2 = this.props,\n          post = _this$props2.post,\n          auth = _this$props2.auth,\n          match = _this$props2.match,\n          firebase = _this$props2.firebase;\n    console.log(firebase);\n    console.log(match.params.id);\n    if (!auth.uid) return React.createElement(Redirect, {\n      to: \"/signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    });\n\n    if (post) {\n      return React.createElement(\"div\", {\n        className: \"container section project-details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card z-depth-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Start Time: \", project.startTime), React.createElement(\"span\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"End Time: \", project.endTime)), React.createElement(\"div\", {\n        className: \"card-action grey lighten-4 grey-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Posted by \", project.authorFirstName, \" \", project.authorLastName, \" \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, moment(project.createdAt.toDate().toString()).calendar())), React.createElement(Link, {\n        to: \"/update/:id\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"update\"))));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"container center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Loading timesheet...\"));\n    }\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const posts = state.firestore.data.posts;\n  const post = posts ? posts[id] : null;\n  return {\n    post: post,\n    auth: state.firebase.auth,\n    //  postArray: state.firestore.ordered.posts,\n    postId: id,\n    //  storedPost: state.post\n    firebase: state.firebase.ordered,\n    //  comments: state.posts.comments\n    posts: posts,\n    comments: state.posts.comments\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  deletePost,\n  addComment,\n  storeComments\n}), firestoreConnect([{\n  collection: \"posts\"\n}]))(PostDetails);\n{\n  /*\r\n  import React from 'react';\r\n  import { Link } from 'react-router-dom';\r\n  import { connect } from 'react-redux';\r\n  import { firestoreConnect } from 'react-redux-firebase';\r\n  import { compose } from 'redux'; \r\n  import { Redirect } from 'react-router-dom';\r\n  import moment from 'moment';\r\n  //import { deleteProject} from '../../store/actions/projectActions';\r\n  \n  const ProjectDetails = (props) => {\r\n  \n     const { project, auth } = props;\r\n     if (!auth.uid) return <Redirect to='/signin' />\r\n     if (project) {\r\n         return (\r\n         <div className=\"container section project-details\">\r\n             <div className=\"card z-depth-0\">\r\n                 <div className=\"card-content\">\r\n                     <span className=\"card-title\">Start Time: { project.startTime }</span>\r\n                     <span className=\"card-title\">End Time: { project.endTime }</span>\r\n                 </div>\r\n                 <div className=\"card-action grey lighten-4 grey-text\">\r\n                     <div>Posted by {project.authorFirstName} {project.authorLastName} </div>\r\n                     <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\r\n                 </div>\r\n                 <Link to=\"/update/:id\"><button>update</button></Link>\r\n             </div>\r\n         </div>\r\n         )\r\n     } else {\r\n         return (\r\n             <div className=\"container center\">\r\n                 <p>Loading timesheet...</p>\r\n             </div>\r\n         )\r\n     }\r\n  }\r\n  \n  const mapStateToProps = (state, ownProps) => {\r\n     // console.log(state);\r\n     const id = ownProps.match.params.id;\r\n     const projects = state.firestore.data.timesheets;\r\n     const project = projects ? projects[id] : null\r\n     return {\r\n         project: project,\r\n         auth: state.firebase.auth\r\n     }\r\n  }\r\n  \n  //const mapDispatchToProps = (dispatch) => {\r\n    // return {\r\n    //     deleteProject: (project) => dispatch(deleteProject(project))\r\n   //  }\r\n  //}\r\n  \n  export default compose(\r\n     connect(mapStateToProps),\r\n     firestoreConnect([\r\n         { collection: 'timesheets'}\r\n     ])\r\n  )(ProjectDetails);*/\n}","map":{"version":3,"sources":["C:/Users/Sizwe Hugo/Desktop/Younglings TimeKeeper/YounglingsTimekeeper-master/src/components/projects/ProjectDetails.js"],"names":["React","Component","connect","firestoreConnect","compose","Redirect","moment","Link","deletePost","addComment","storeComments","_","AddComment","Comment","showAlert","PostDetails","componentWillMount","postId","props","renderComments","comments","console","log","map","comment","key","renderButtons","post","auth","uid","authorId","onDeletePost","bind","history","push","render","match","firebase","params","id","project","startTime","endTime","authorFirstName","authorLastName","createdAt","toDate","toString","calendar","mapStateToProps","state","ownProps","posts","firestore","data","ordered","collection"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  deletePost,\r\n  addComment,\r\n  storeComments\r\n} from \"../../store/actions/postActions\";\r\nimport _ from \"lodash\";\r\nimport AddComment from \"./AddComment\";\r\nimport Comment from \"./Comment\";\r\nimport {showAlert} from '../layout/alert'\r\n\r\n\r\nclass PostDetails extends Component {\r\n  componentWillMount(){\r\n    const {postId} = this.props \r\n    this.props.storeComments(postId)\r\n  }\r\n  renderComments() {\r\n    const { postId, comments } = this.props;\r\n    console.log(comments);    \r\n    \r\n    return _.map(comments, (comment, key) => {\r\n      if(postId===comment.postId)\r\n      return (\r\n        <Comment postId={postId} key={key} comment={comment}>\r\n          {comment.comment}\r\n        </Comment>\r\n      );\r\n    });\r\n  }\r\n\r\n  renderButtons(post) {\r\n    if (this.props.auth.uid === post.authorId) {\r\n      return (\r\n        <div id=\"update-buttons\">\r\n          <button className=\"btn orange lighten-2 z-depth-o\">\r\n            <Link id=\"update-button\" to={\"/update/\" + this.props.postId} className=\"white-text\">\r\n              Update\r\n            </Link>\r\n          </button>\r\n          <button\r\n            onClick={this.onDeletePost.bind(this)}\r\n            //  onClick={this.onDeletePost.bind(this, post.id)}\r\n            className=\"btn orange lighten-2 z-depth-o\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  onDeletePost() {\r\n    this.props.deletePost(this.props.postId, () => {});\r\n    this.props.history.push(\"/\");\r\n    showAlert('Your post successfully deleted!')\r\n\r\n  }\r\n\r\n  render() {\r\n    const { post, auth, match, firebase } = this.props;\r\n    console.log(firebase);\r\n    console.log(match.params.id);\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    if (post) {\r\n      return (\r\n        <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n            <div className=\"card-content\">\r\n                <span className=\"card-title\">Start Time: { project.startTime }</span>\r\n                <span className=\"card-title\">End Time: { project.endTime }</span>\r\n            </div>\r\n            <div className=\"card-action grey lighten-4 grey-text\">\r\n                <div>Posted by {project.authorFirstName} {project.authorLastName} </div>\r\n                <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\r\n            </div>\r\n            <Link to=\"/update/:id\"><button>update</button></Link>\r\n        </div>\r\n      </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"container center\">\r\n                <p>Loading timesheet...</p>\r\n            </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const posts = state.firestore.data.posts;\r\n  const post = posts ? posts[id] : null;\r\n  return {\r\n    post: post,\r\n    auth: state.firebase.auth,\r\n    //  postArray: state.firestore.ordered.posts,\r\n    postId: id,\r\n    //  storedPost: state.post\r\n    firebase: state.firebase.ordered,\r\n    //  comments: state.posts.comments\r\n    posts: posts,\r\n    comments: state.posts.comments\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(\r\n    mapStateToProps,\r\n    { deletePost, addComment, storeComments }\r\n  ),\r\n  firestoreConnect([{ collection: \"posts\" }])\r\n)(PostDetails);\r\n\r\n\r\n\r\n\r\n{/*\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux'; \r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n//import { deleteProject} from '../../store/actions/projectActions';\r\n\r\nconst ProjectDetails = (props) => {\r\n\r\n    const { project, auth } = props;\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    if (project) {\r\n        return (\r\n        <div className=\"container section project-details\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Start Time: { project.startTime }</span>\r\n                    <span className=\"card-title\">End Time: { project.endTime }</span>\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                    <div>Posted by {project.authorFirstName} {project.authorLastName} </div>\r\n                    <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\r\n                </div>\r\n                <Link to=\"/update/:id\"><button>update</button></Link>\r\n            </div>\r\n        </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading timesheet...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    // console.log(state);\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.timesheets;\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\n//const mapDispatchToProps = (dispatch) => {\r\n   // return {\r\n   //     deleteProject: (project) => dispatch(deleteProject(project))\r\n  //  }\r\n//}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'timesheets'}\r\n    ])\r\n)(ProjectDetails);*/}\r\n"]},"metadata":{},"sourceType":"module"}