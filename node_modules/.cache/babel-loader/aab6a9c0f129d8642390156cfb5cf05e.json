{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Sizwe Hugo\\\\Desktop\\\\Younglings TimeKeeper\\\\YounglingsTimekeeper-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nexport const createProject = project => {\n  return (dispatch, getState, {\n    getFirebase,\n    getFirestore\n  }) => {\n    // make async call to database\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    firestore.collection('timesheets').add(_objectSpread({}, project, {\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date()\n    })).then(() => {\n      dispatch({\n        type: 'CREATE_PROJECT'\n      });\n    }).catch(err => {\n      dispatch({\n        type: 'CREATE_PROJECT_ERROR'\n      }, err);\n    });\n  };\n};\nexport function getProjects() {\n  return (dispatch, {\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection().doc('timesheets').on('value', snapshot => {\n      dispatch({\n        type: FETCH_PROJECTS,\n        payload: snapshot.val()\n      });\n    });\n  };\n}\nexport function deleteProject(id) {\n  return (dispatch, {\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection().doc('timesheets').child(id).remove();\n  };\n}\n{\n  /*\r\n  export const deleteProject = id => {\r\n   return (dispatch, getState, { getFirestore }) => {\r\n     const firestore = getFirestore();\r\n  \n     firestore\r\n       .collection(\"timesheets\")\r\n       .doc(id)\r\n       .delete()\r\n       .then(() => {\r\n         dispatch({ type: 'DELETE_PROJECT', id });\r\n       });\r\n   };\r\n  };\r\n  */\n}\nexport const updateProject = (id, project) => {\n  return (dispatch, getState, {\n    getFirestore\n  }) => {\n    const firestore = getFirestore();\n    firestore.collection(\"timesheets\").doc(id).update(project).then(() => {\n      dispatch({\n        type: 'UPDATE_PROJECT'\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Sizwe Hugo/Desktop/Younglings TimeKeeper/YounglingsTimekeeper-master/src/store/actions/projectActions.js"],"names":["createProject","project","dispatch","getState","getFirebase","getFirestore","firestore","profile","firebase","authorId","auth","uid","collection","add","authorFirstName","firstName","authorLastName","lastName","createdAt","Date","then","type","catch","err","getProjects","doc","on","snapshot","FETCH_PROJECTS","payload","val","deleteProject","id","child","remove","updateProject","update"],"mappings":";AAAA,OAAO,MAAMA,aAAa,GAAIC,OAAD,IAAa;AACxC,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,GAArB,KAAuD;AAC1D;AACA,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACA,UAAME,OAAO,GAAGJ,QAAQ,GAAGK,QAAX,CAAoBD,OAApC;AACA,UAAME,QAAQ,GAAGN,QAAQ,GAAGK,QAAX,CAAoBE,IAApB,CAAyBC,GAA1C;AAEAL,IAAAA,SAAS,CAACM,UAAV,CAAqB,YAArB,EAAmCC,GAAnC,mBACOZ,OADP;AAEIa,MAAAA,eAAe,EAAEP,OAAO,CAACQ,SAF7B;AAGIC,MAAAA,cAAc,EAAET,OAAO,CAACU,QAH5B;AAIIR,MAAAA,QAAQ,EAAEA,QAJd;AAKIS,MAAAA,SAAS,EAAE,IAAIC,IAAJ;AALf,QAMGC,IANH,CAMQ,MAAM;AACVlB,MAAAA,QAAQ,CAAC;AAAEmB,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACH,KARD,EAQGC,KARH,CAQSC,GAAG,IAAI;AACZrB,MAAAA,QAAQ,CAAC;AAAEmB,QAAAA,IAAI,EAAE;AAAR,OAAD,EAAmCE,GAAnC,CAAR;AACH,KAVD;AAYH,GAlBD;AAmBD,CApBM;AAsBP,OAAO,SAASC,WAAT,GAAwB;AAC7B,SAAO,CAACtB,QAAD,EAAW;AAACG,IAAAA;AAAD,GAAX,KAA8B;AACnC,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACAC,IAAAA,SAAS,CACRM,UADD,GAECa,GAFD,CAEK,YAFL,EAGCC,EAHD,CAGI,OAHJ,EAGaC,QAAQ,IAAI;AACvBzB,MAAAA,QAAQ,CAAC;AACPmB,QAAAA,IAAI,EAAEO,cADC;AAEPC,QAAAA,OAAO,EAAEF,QAAQ,CAACG,GAAT;AAFF,OAAD,CAAR;AAID,KARD;AASD,GAXD;AAYD;AAED,OAAO,SAASC,aAAT,CAAuBC,EAAvB,EAA2B;AAChC,SAAO,CAAC9B,QAAD,EAAW;AAACG,IAAAA;AAAD,GAAX,KAA8B;AACrC,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACAC,IAAAA,SAAS,CACRM,UADD,GAECa,GAFD,CAEK,YAFL,EAGCQ,KAHD,CAGOD,EAHP,EAICE,MAJD;AAKD,GAPC;AAQD;AACD;AAAC;;;;;;;;;;;;;;;AAcE;AAEH,OAAO,MAAMC,aAAa,GAAG,CAACH,EAAD,EAAK/B,OAAL,KAAiB;AAC5C,SAAO,CAACC,QAAD,EAAWC,QAAX,EAAqB;AAAEE,IAAAA;AAAF,GAArB,KAA0C;AAC/C,UAAMC,SAAS,GAAGD,YAAY,EAA9B;AACAC,IAAAA,SAAS,CACNM,UADH,CACc,YADd,EAEGa,GAFH,CAEOO,EAFP,EAGGI,MAHH,CAGUnC,OAHV,EAIGmB,IAJH,CAIQ,MAAM;AACVlB,MAAAA,QAAQ,CAAC;AAAEmB,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KANH;AAOD,GATD;AAUD,CAXM","sourcesContent":["export const createProject = (project) => {\r\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\r\n      // make async call to database\r\n      const firestore = getFirestore();\r\n      const profile = getState().firebase.profile;\r\n      const authorId = getState().firebase.auth.uid;\r\n\r\n      firestore.collection('timesheets').add({\r\n          ...project,\r\n          authorFirstName: profile.firstName,\r\n          authorLastName: profile.lastName,\r\n          authorId: authorId,\r\n          createdAt: new Date()\r\n      }).then(() => {\r\n          dispatch({ type: 'CREATE_PROJECT'});\r\n      }).catch(err => {\r\n          dispatch({ type: 'CREATE_PROJECT_ERROR' }, err );\r\n      });        \r\n\r\n  }\r\n};\r\n\r\nexport function getProjects () {\r\n  return (dispatch, {getFirestore}) => {\r\n    const firestore = getFirestore();\r\n    firestore\r\n    .collection()\r\n    .doc('timesheets')\r\n    .on('value', snapshot => {\r\n      dispatch({\r\n        type: FETCH_PROJECTS,\r\n        payload: snapshot.val()\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport function deleteProject(id) {\r\n  return (dispatch, {getFirestore}) => {\r\n  const firestore = getFirestore();\r\n  firestore\r\n  .collection()\r\n  .doc('timesheets')\r\n  .child(id)\r\n  .remove();\r\n}\r\n}\r\n{/*\r\nexport const deleteProject = id => {\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const firestore = getFirestore();\r\n\r\n    firestore\r\n      .collection(\"timesheets\")\r\n      .doc(id)\r\n      .delete()\r\n      .then(() => {\r\n        dispatch({ type: 'DELETE_PROJECT', id });\r\n      });\r\n  };\r\n};\r\n*/}\r\n\r\nexport const updateProject = (id, project) => {\r\n  return (dispatch, getState, { getFirestore }) => {\r\n    const firestore = getFirestore();\r\n    firestore\r\n      .collection(\"timesheets\")\r\n      .doc(id)\r\n      .update(project)\r\n      .then(() => {\r\n        dispatch({ type: 'UPDATE_PROJECT' });\r\n      });\r\n  };\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}