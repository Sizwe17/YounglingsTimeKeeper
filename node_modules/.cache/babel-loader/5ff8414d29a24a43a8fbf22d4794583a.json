{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sizwe Hugo\\\\Desktop\\\\Younglings TimeKeeper\\\\YounglingsTimekeeper-master\\\\src\\\\components\\\\projects\\\\ProjectDetails.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport { deleteProject } from '../../store/actions/projectActions';\n\nclass ProjectDetails extends Component {\n  componentWillMount() {\n    const projectId = this.props.projectId;\n    this.props(projectId);\n  }\n\n  renderButtons(project) {\n    if (this.props.auth.uid === project.authorId) {\n      return React.createElement(\"div\", {\n        id: \"update-buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn orange lighten-2 z-depth-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(Link, {\n        id: \"update-button\",\n        to: \"/update/\" + this.props.projectId,\n        className: \"white-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Update\")), React.createElement(\"button\", {\n        onClick: this.onDeleteProject.bind(this) //  onClick={this.onDeletePost.bind(this, post.id)}\n        ,\n        className: \"btn orange lighten-2 z-depth-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Delete\"));\n    }\n  }\n\n  onDeletePost() {\n    this.props.deleteProject(this.props.projectId, () => {});\n    this.props.history.push(\"/\");\n  }\n\n  render() {\n    const _this$props = this.props,\n          project = _this$props.project,\n          auth = _this$props.auth,\n          firebase = _this$props.firebase;\n    console.log(firebase);\n    if (!auth.uid) return React.createElement(Redirect, {\n      to: \"/signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    });\n\n    if (project) {\n      return React.createElement(\"div\", {\n        className: \"container section project-details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card z-depth-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Start Time: \", project.startTime), React.createElement(\"span\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"End Time: \", project.endTime)), React.createElement(\"div\", {\n        className: \"card-action grey lighten-4 grey-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Posted by \", project.authorFirstName, \" \", project.authorLastName, \" \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, moment(project.createdAt.toDate().toString()).calendar())), React.createElement(\"div\", {\n        className: \"input-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.renderButtons(project))));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"container center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Loading timesheet...\"));\n    }\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n  return {\n    project: project,\n    auth: state.firebase.auth,\n    projectId: id\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  deleteProject\n}), firestoreConnect([{\n  collection: \"timesheets\"\n}]))(ProjectDetails);\n{\n  /*\r\n  import React from 'react';\r\n  import { Link } from 'react-router-dom';\r\n  import { connect } from 'react-redux';\r\n  import { firestoreConnect } from 'react-redux-firebase';\r\n  import { compose } from 'redux'; \r\n  import { Redirect } from 'react-router-dom';\r\n  import moment from 'moment';\r\n  //import { deleteProject} from '../../store/actions/projectActions';\r\n  \n  const ProjectDetails = (props) => {\r\n  \n     const { project, auth } = props;\r\n     if (!auth.uid) return <Redirect to='/signin' />\r\n     if (project) {\r\n         return (\r\n         <div className=\"container section project-details\">\r\n             <div className=\"card z-depth-0\">\r\n                 <div className=\"card-content\">\r\n                     <span className=\"card-title\">Start Time: { project.startTime }</span>\r\n                     <span className=\"card-title\">End Time: { project.endTime }</span>\r\n                 </div>\r\n                 <div className=\"card-action grey lighten-4 grey-text\">\r\n                     <div>Posted by {project.authorFirstName} {project.authorLastName} </div>\r\n                     <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\r\n                 </div>\r\n                 <Link to=\"/update/:id\"><button>update</button></Link>\r\n             </div>\r\n         </div>\r\n         )\r\n     } else {\r\n         return (\r\n             <div className=\"container center\">\r\n                 <p>Loading timesheet...</p>\r\n             </div>\r\n         )\r\n     }\r\n  }\r\n  \n  const mapStateToProps = (state, ownProps) => {\r\n     // console.log(state);\r\n     const id = ownProps.match.params.id;\r\n     const projects = state.firestore.data.timesheets;\r\n     const project = projects ? projects[id] : null\r\n     return {\r\n         project: project,\r\n         auth: state.firebase.auth\r\n     }\r\n  }\r\n  \n  //const mapDispatchToProps = (dispatch) => {\r\n    // return {\r\n    //     deleteProject: (project) => dispatch(deleteProject(project))\r\n   //  }\r\n  //}\r\n  \n  export default compose(\r\n     connect(mapStateToProps),\r\n     firestoreConnect([\r\n         { collection: 'timesheets'}\r\n     ])\r\n  )(ProjectDetails);*/\n}","map":{"version":3,"sources":["C:/Users/Sizwe Hugo/Desktop/Younglings TimeKeeper/YounglingsTimekeeper-master/src/components/projects/ProjectDetails.js"],"names":["React","Component","connect","firestoreConnect","compose","Redirect","moment","Link","deleteProject","ProjectDetails","componentWillMount","projectId","props","renderButtons","project","auth","uid","authorId","onDeleteProject","bind","onDeletePost","history","push","render","firebase","console","log","startTime","endTime","authorFirstName","authorLastName","createdAt","toDate","toString","calendar","mapStateToProps","state","ownProps","id","match","params","projects","firestore","data","collection"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport { compose } from \"redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {deleteProject } from '../../store/actions/projectActions'\r\n\r\n\r\n\r\nclass ProjectDetails extends Component {\r\n    componentWillMount(){\r\n        const {projectId} = this.props \r\n        this.props(projectId)\r\n      }\r\n\r\n  renderButtons(project) {\r\n    if (this.props.auth.uid === project.authorId) {\r\n      return (\r\n        <div id=\"update-buttons\">\r\n          <button className=\"btn orange lighten-2 z-depth-o\">\r\n            <Link id=\"update-button\" to={\"/update/\" + this.props.projectId} className=\"white-text\">\r\n              Update\r\n            </Link>\r\n          </button>\r\n          <button\r\n            onClick={this.onDeleteProject.bind(this)}\r\n            //  onClick={this.onDeletePost.bind(this, post.id)}\r\n            className=\"btn orange lighten-2 z-depth-o\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  onDeletePost() {\r\n    this.props.deleteProject(this.props.projectId, () => {});\r\n    this.props.history.push(\"/\");\r\n  }\r\n\r\n  render() {\r\n    const { project, auth, firebase } = this.props;\r\n    console.log(firebase);\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    if (project) {\r\n      return (\r\n        <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n            <div className=\"card-content\">\r\n                <span className=\"card-title\">Start Time: { project.startTime }</span>\r\n                <span className=\"card-title\">End Time: { project.endTime }</span>\r\n            </div>\r\n            <div className=\"card-action grey lighten-4 grey-text\">\r\n                <div>Posted by {project.authorFirstName} {project.authorLastName} </div>\r\n                <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\r\n            </div>\r\n            <div className=\"input-field\">{this.renderButtons(project)}</div>\r\n        </div>\r\n      </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"container center\">\r\n                <p>Loading timesheet...</p>\r\n            </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth,\r\n    projectId: id\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(\r\n    mapStateToProps,\r\n    { deleteProject}\r\n  ),\r\n  firestoreConnect([{ collection: \"timesheets\" }])\r\n)(ProjectDetails);\r\n\r\n\r\n\r\n\r\n{/*\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux'; \r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n//import { deleteProject} from '../../store/actions/projectActions';\r\n\r\nconst ProjectDetails = (props) => {\r\n\r\n    const { project, auth } = props;\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    if (project) {\r\n        return (\r\n        <div className=\"container section project-details\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Start Time: { project.startTime }</span>\r\n                    <span className=\"card-title\">End Time: { project.endTime }</span>\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                    <div>Posted by {project.authorFirstName} {project.authorLastName} </div>\r\n                    <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\r\n                </div>\r\n                <Link to=\"/update/:id\"><button>update</button></Link>\r\n            </div>\r\n        </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading timesheet...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    // console.log(state);\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.timesheets;\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\n//const mapDispatchToProps = (dispatch) => {\r\n   // return {\r\n   //     deleteProject: (project) => dispatch(deleteProject(project))\r\n  //  }\r\n//}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'timesheets'}\r\n    ])\r\n)(ProjectDetails);*/}\r\n"]},"metadata":{},"sourceType":"module"}