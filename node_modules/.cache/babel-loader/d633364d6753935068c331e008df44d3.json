{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sizwe Hugo\\\\Desktop\\\\Younglings TimeKeeper\\\\YounglingsTimekeeper-master\\\\src\\\\components\\\\posts\\\\PostDetails.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport { deletePost } from \"../../store/actions/postActions\";\nimport _ from \"lodash\";\nimport { showAlert } from '../layout/alert';\n\nclass PostDetails extends Component {\n  renderButtons(post) {\n    if (this.props.auth.uid === post.authorId) {\n      return React.createElement(\"div\", {\n        id: \"update-buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        className: \"btn pink lighten-1 z-depth-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(Link, {\n        id: \"update-button\",\n        to: \"/update/\" + this.props.postId,\n        className: \"white-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Update\")), React.createElement(\"button\", {\n        onClick: this.onDeletePost.bind(this) //  onClick={this.onDeletePost.bind(this, post.id)}\n        ,\n        className: \"btn pink lighten-1 z-depth-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Delete\"));\n    }\n  }\n\n  onDeletePost() {\n    this.props.deletePost(this.props.postId, () => {});\n    this.props.history.push(\"/\");\n    showAlert('Your post successfully deleted!');\n  }\n\n  render() {\n    const _this$props = this.props,\n          post = _this$props.post,\n          auth = _this$props.auth,\n          match = _this$props.match,\n          firebase = _this$props.firebase;\n    console.log(firebase);\n    console.log(match.params.id);\n    if (!auth.uid) return React.createElement(Redirect, {\n      to: \"/signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    });\n\n    if (post) {\n      return React.createElement(\"div\", {\n        className: \"container section project-details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card z-depth-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, post.title), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, post.content)), React.createElement(\"div\", {\n        className: \"card-action grey lighten-4 grey-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Posted by \", post.authorFirstName, \" \", post.authorLastName), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \" \", moment(post.createdAt).calendar())), React.createElement(\"div\", {\n        className: \"input-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, this.renderButtons(post))));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"containor center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"It seems like, there is no post yet..\"));\n    }\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const posts = state.firestore.data.posts;\n  const post = posts ? posts[id] : null;\n  return {\n    post: post,\n    auth: state.firebase.auth,\n    //  postArray: state.firestore.ordered.posts,\n    postId: id,\n    //  storedPost: state.post\n    firebase: state.firebase.ordered,\n    //  comments: state.posts.comments\n    posts: posts\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  deletePost\n}), firestoreConnect([{\n  collection: \"posts\"\n}]))(PostDetails);","map":{"version":3,"sources":["C:/Users/Sizwe Hugo/Desktop/Younglings TimeKeeper/YounglingsTimekeeper-master/src/components/posts/PostDetails.js"],"names":["React","Component","connect","firestoreConnect","compose","Redirect","moment","Link","deletePost","_","showAlert","PostDetails","renderButtons","post","props","auth","uid","authorId","postId","onDeletePost","bind","history","push","render","match","firebase","console","log","params","id","title","content","authorFirstName","authorLastName","createdAt","calendar","mapStateToProps","state","ownProps","posts","firestore","data","ordered","collection"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { compose } from \"redux\";\nimport { Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport { deletePost } from \"../../store/actions/postActions\";\nimport _ from \"lodash\";\nimport {showAlert} from '../layout/alert'\n\n\nclass PostDetails extends Component {\n\n  renderButtons(post) {\n    if (this.props.auth.uid === post.authorId) {\n      return (\n        <div id=\"update-buttons\">\n          <button className=\"btn pink lighten-1 z-depth-0\">\n            <Link id=\"update-button\" to={\"/update/\" + this.props.postId} className=\"white-text\">\n              Update\n            </Link>\n          </button>\n          <button\n            onClick={this.onDeletePost.bind(this)}\n            //  onClick={this.onDeletePost.bind(this, post.id)}\n            className=\"btn pink lighten-1 z-depth-0\"\n          >\n            Delete\n          </button>\n        </div>\n      );\n    }\n  }\n\n  onDeletePost() {\n    this.props.deletePost(this.props.postId, () => {});\n    this.props.history.push(\"/\");\n    showAlert('Your post successfully deleted!')\n\n  }\n\n  render() {\n    const { post, auth, match, firebase } = this.props;\n    console.log(firebase);\n    console.log(match.params.id);\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\n    if (post) {\n      return (\n        <div className=\"container section project-details\">\n          <div className=\"card z-depth-0\">\n            <div className=\"card-content\">\n              <span className=\"card-title\">{post.title}</span>\n              <p>{post.content}</p>\n            </div>\n            <div className=\"card-action grey lighten-4 grey-text\">\n              <div>\n                Posted by {post.authorFirstName} {post.authorLastName}\n              </div>\n              <div> {moment(post.createdAt).calendar()}</div>\n            </div>\n            <div className=\"input-field\">{this.renderButtons(post)}</div>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"containor center\">\n          <p>It seems like, there is no post yet..</p>\n        </div>\n      );\n    }\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const posts = state.firestore.data.posts;\n  const post = posts ? posts[id] : null;\n  return {\n    post: post,\n    auth: state.firebase.auth,\n    //  postArray: state.firestore.ordered.posts,\n    postId: id,\n    //  storedPost: state.post\n    firebase: state.firebase.ordered,\n    //  comments: state.posts.comments\n    posts: posts,\n  };\n};\n\nexport default compose(\n  connect(\n    mapStateToProps,\n    { deletePost }\n  ),\n  firestoreConnect([{ collection: \"posts\" }])\n)(PostDetails);\n"]},"metadata":{},"sourceType":"module"}