{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sizwe Hugo\\\\Desktop\\\\Younglings TimeKeeper\\\\YounglingsTimekeeper-master\\\\src\\\\components\\\\projects\\\\ProjectDetails.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment'; //import { deleteProject} from '../../store/actions/projectActions';\n\nconst ProjectDetails = (props, {\n  onEditProject,\n  onRemoveProject\n}) => {\n  const project = props.project,\n        auth = props.auth;\n  if (!auth.uid) return React.createElement(Redirect, {\n    to: \"/signin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  });\n\n  if (project) {\n    return React.createElement(\"div\", {\n      className: \"container section project-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card z-depth-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Start Time: \", project.startTime), React.createElement(\"span\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"End Time: \", project.endTime)), React.createElement(\"div\", {\n      className: \"card-action grey lighten-4 grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \"Posted by \", project.authorFirstName, \" \", project.authorLastName, \" \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, moment(project.createdAt.toDate().toString()).calendar())), React.createElement(\"button\", {\n      onRemoveProject: onRemoveProject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onEditProject: onEditProject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    })));\n  } else {\n    return React.createElement(\"div\", {\n      className: \"container center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Loading timesheet...\"));\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(state);\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.timesheets;\n  const project = projects ? projects[id] : null;\n  return {\n    project: project,\n    auth: state.firebase.auth\n  };\n}; //const mapDispatchToProps = (dispatch) => {\n// return {\n//     deleteProject: (project) => dispatch(deleteProject(project))\n//  }\n//}\n\n\nexport default compose(connect(mapStateToProps), firestoreConnect([{\n  collection: 'timesheets'\n}]))(ProjectDetails);","map":{"version":3,"sources":["C:/Users/Sizwe Hugo/Desktop/Younglings TimeKeeper/YounglingsTimekeeper-master/src/components/projects/ProjectDetails.js"],"names":["React","connect","firestoreConnect","compose","Redirect","moment","ProjectDetails","props","onEditProject","onRemoveProject","project","auth","uid","startTime","endTime","authorFirstName","authorLastName","createdAt","toDate","toString","calendar","mapStateToProps","state","ownProps","id","match","params","projects","firestore","data","timesheets","firebase","collection"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CACA;;AAEA,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAO;AAACC,EAAAA,aAAD;AAAeC,EAAAA;AAAf,CAAP,KAA2C;AAAA,QAEtDC,OAFsD,GAEpCH,KAFoC,CAEtDG,OAFsD;AAAA,QAE7CC,IAF6C,GAEpCJ,KAFoC,CAE7CI,IAF6C;AAG9D,MAAI,CAACA,IAAI,CAACC,GAAV,EAAe,OAAO,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;;AACf,MAAIF,OAAJ,EAAa;AACT,WACA;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA2CA,OAAO,CAACG,SAAnD,CADJ,EAEI;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAyCH,OAAO,CAACI,OAAjD,CAFJ,CADJ,EAKI;AAAK,MAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBJ,OAAO,CAACK,eAAxB,OAA0CL,OAAO,CAACM,cAAlD,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMX,MAAM,CAACK,OAAO,CAACO,SAAR,CAAkBC,MAAlB,GAA2BC,QAA3B,EAAD,CAAN,CAA8CC,QAA9C,EAAN,CAFJ,CALJ,EASI;AAAQ,MAAA,eAAe,EAAEX,eAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATJ,EAUI;AAAQ,MAAA,aAAa,EAAED,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,CADJ,CADA;AAgBH,GAjBD,MAiBO;AACH,WACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,CADJ;AAKH;AACJ,CA5BD;;AA8BA,MAAMa,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AACzC;AACA,QAAMC,EAAE,GAAGD,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBF,EAAjC;AACA,QAAMG,QAAQ,GAAGL,KAAK,CAACM,SAAN,CAAgBC,IAAhB,CAAqBC,UAAtC;AACA,QAAMpB,OAAO,GAAGiB,QAAQ,GAAGA,QAAQ,CAACH,EAAD,CAAX,GAAkB,IAA1C;AACA,SAAO;AACHd,IAAAA,OAAO,EAAEA,OADN;AAEHC,IAAAA,IAAI,EAAEW,KAAK,CAACS,QAAN,CAAepB;AAFlB,GAAP;AAIH,CATD,C,CAWA;AACG;AACA;AACD;AACF;;;AAEA,eAAeR,OAAO,CAClBF,OAAO,CAACoB,eAAD,CADW,EAElBnB,gBAAgB,CAAC,CACb;AAAE8B,EAAAA,UAAU,EAAE;AAAd,CADa,CAAD,CAFE,CAAP,CAKb1B,cALa,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux'; \r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n//import { deleteProject} from '../../store/actions/projectActions';\r\n\r\nconst ProjectDetails = (props,{onEditProject,onRemoveProject}) => {\r\n\r\n    const { project, auth } = props;\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    if (project) {\r\n        return (\r\n        <div className=\"container section project-details\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Start Time: { project.startTime }</span>\r\n                    <span className=\"card-title\">End Time: { project.endTime }</span>\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                    <div>Posted by {project.authorFirstName} {project.authorLastName} </div>\r\n                    <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\r\n                </div>\r\n                <button onRemoveProject={onRemoveProject}></button> \r\n                <button onEditProject={onEditProject}></button> \r\n            </div>\r\n        </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading timesheet...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    // console.log(state);\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.timesheets;\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\n//const mapDispatchToProps = (dispatch) => {\r\n   // return {\r\n   //     deleteProject: (project) => dispatch(deleteProject(project))\r\n  //  }\r\n//}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'timesheets'}\r\n    ])\r\n)(ProjectDetails);"]},"metadata":{},"sourceType":"module"}