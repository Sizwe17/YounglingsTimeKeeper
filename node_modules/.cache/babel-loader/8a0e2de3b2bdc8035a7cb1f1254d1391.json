{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sizwe Hugo\\\\Desktop\\\\Younglings TimeKeeper\\\\YounglingsTimekeeper-master\\\\src\\\\components\\\\projects\\\\ProjectDetails.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\nimport { deleteProject } from '../../store/actions/projectActions';\n\nclass ProjectDetails extends Component {\n  render() {\n    const _this$props = this.props,\n          project = _this$props.project,\n          auth = _this$props.auth;\n    if (!auth.uid) return React.createElement(Redirect, {\n      to: \"/signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    });\n\n    if (project) {\n      return React.createElement(\"div\", {\n        className: \"container section project-details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card z-depth-0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Start Time: \", project.startTime), React.createElement(\"span\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"End Time: \", project.endTime)), React.createElement(\"div\", {\n        className: \"card-action grey lighten-4 grey-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Posted by \", project.authorFirstName, \" \", project.authorLastName, \" \"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, moment(project.createdAt.toDate().toString()).calendar())), React.createElement(\"div\", {\n        className: \"input-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      })));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"container center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Loading timesheet...\"));\n    }\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n  return {\n    project: project,\n    auth: state.firebase.auth,\n    projectId: id\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  deleteProject\n}), firestoreConnect([{\n  collection: \"timesheets\"\n}]))(ProjectDetails);\n{\n  /*\r\n  import React from 'react';\r\n  import { Link } from 'react-router-dom';\r\n  import { connect } from 'react-redux';\r\n  import { firestoreConnect } from 'react-redux-firebase';\r\n  import { compose } from 'redux'; \r\n  import { Redirect } from 'react-router-dom';\r\n  import moment from 'moment';\r\n  //import { deleteProject} from '../../store/actions/projectActions';\r\n  \n  const ProjectDetails = (props) => {\r\n  \n     const { project, auth } = props;\r\n     if (!auth.uid) return <Redirect to='/signin' />\r\n     if (project) {\r\n         return (\r\n         <div className=\"container section project-details\">\r\n             <div className=\"card z-depth-0\">\r\n                 <div className=\"card-content\">\r\n                     <span className=\"card-title\">Start Time: { project.startTime }</span>\r\n                     <span className=\"card-title\">End Time: { project.endTime }</span>\r\n                 </div>\r\n                 <div className=\"card-action grey lighten-4 grey-text\">\r\n                     <div>Posted by {project.authorFirstName} {project.authorLastName} </div>\r\n                     <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\r\n                 </div>\r\n                 <Link to=\"/update/:id\"><button>update</button></Link>\r\n             </div>\r\n         </div>\r\n         )\r\n     } else {\r\n         return (\r\n             <div className=\"container center\">\r\n                 <p>Loading timesheet...</p>\r\n             </div>\r\n         )\r\n     }\r\n  }\r\n  \n  const mapStateToProps = (state, ownProps) => {\r\n     // console.log(state);\r\n     const id = ownProps.match.params.id;\r\n     const projects = state.firestore.data.timesheets;\r\n     const project = projects ? projects[id] : null\r\n     return {\r\n         project: project,\r\n         auth: state.firebase.auth\r\n     }\r\n  }\r\n  \n  //const mapDispatchToProps = (dispatch) => {\r\n    // return {\r\n    //     deleteProject: (project) => dispatch(deleteProject(project))\r\n   //  }\r\n  //}\r\n  \n  export default compose(\r\n     connect(mapStateToProps),\r\n     firestoreConnect([\r\n         { collection: 'timesheets'}\r\n     ])\r\n  )(ProjectDetails);*/\n}","map":{"version":3,"sources":["C:/Users/Sizwe Hugo/Desktop/Younglings TimeKeeper/YounglingsTimekeeper-master/src/components/projects/ProjectDetails.js"],"names":["React","Component","Link","connect","firestoreConnect","compose","Redirect","moment","deleteProject","ProjectDetails","render","props","project","auth","uid","startTime","endTime","authorFirstName","authorLastName","createdAt","toDate","toString","calendar","mapStateToProps","state","ownProps","id","match","params","projects","firestore","data","firebase","projectId","collection"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux'; \r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { deleteProject} from '../../store/actions/projectActions';\r\n\r\n\r\n\r\nclass ProjectDetails extends Component {\r\n  \r\n\r\n  render() {\r\n    const { project, auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    if (project) {\r\n      return (\r\n        <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n            <div className=\"card-content\">\r\n                <span className=\"card-title\">Start Time: {project.startTime }</span>\r\n                <span className=\"card-title\">End Time: {project.endTime }</span>\r\n            </div>\r\n            <div className=\"card-action grey lighten-4 grey-text\">\r\n                <div>Posted by {project.authorFirstName} {project.authorLastName} </div>\r\n                <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\r\n            </div>\r\n            <div className=\"input-field\">{/*this.renderButtons(project)*/}</div>\r\n        </div>\r\n      </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"container center\">\r\n        <p>Loading timesheet...</p>\r\n    </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const id = ownProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id] : null;\r\n  return {\r\n    project: project,\r\n    auth: state.firebase.auth,\r\n    projectId: id\r\n  };\r\n};\r\n\r\nexport default compose(\r\n  connect(\r\n    mapStateToProps,\r\n    { deleteProject}\r\n  ),\r\n  firestoreConnect([{ collection: \"timesheets\" }])\r\n)(ProjectDetails);\r\n\r\n\r\n\r\n\r\n{/*\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux'; \r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\n//import { deleteProject} from '../../store/actions/projectActions';\r\n\r\nconst ProjectDetails = (props) => {\r\n\r\n    const { project, auth } = props;\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    if (project) {\r\n        return (\r\n        <div className=\"container section project-details\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Start Time: { project.startTime }</span>\r\n                    <span className=\"card-title\">End Time: { project.endTime }</span>\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                    <div>Posted by {project.authorFirstName} {project.authorLastName} </div>\r\n                    <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\r\n                </div>\r\n                <Link to=\"/update/:id\"><button>update</button></Link>\r\n            </div>\r\n        </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading timesheet...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    // console.log(state);\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.timesheets;\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\n//const mapDispatchToProps = (dispatch) => {\r\n   // return {\r\n   //     deleteProject: (project) => dispatch(deleteProject(project))\r\n  //  }\r\n//}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps),\r\n    firestoreConnect([\r\n        { collection: 'timesheets'}\r\n    ])\r\n)(ProjectDetails);*/}\r\n"]},"metadata":{},"sourceType":"module"}