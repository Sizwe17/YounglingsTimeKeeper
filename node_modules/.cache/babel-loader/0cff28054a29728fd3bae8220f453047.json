{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sizwe Hugo\\\\Desktop\\\\Younglings TimeKeeper\\\\YounglingsTimekeeper-master\\\\src\\\\components\\\\projects\\\\ProjectDetails.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\nimport { deleteProject } from '../../store/actions/projectActions';\n\nconst ProjectDetails = props => {\n  const onDeleteProject = id => {\n    //delete post\n    props.deleteProject(id).then(() => {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const project = props.project,\n        auth = props.auth;\n  if (!auth.uid) return React.createElement(Redirect, {\n    to: \"/signin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  });\n\n  if (project) {\n    return React.createElement(\"div\", {\n      className: \"container section project-details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card z-depth-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"card-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"Start Time: \", project.startTime), React.createElement(\"span\", {\n      className: \"card-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"End Time: \", project.endTime)), React.createElement(\"div\", {\n      className: \"card-action grey lighten-4 grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \"Posted by \", project.authorFirstName, \" \", project.authorLastName, \" \"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, moment(project.createdAt.toDate().toString()).calendar())), React.createElement(Link, {\n      to: \"/update/:id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"update\")), React.createElement(\"button\", {\n      className: \"delete\",\n      onClick: e => onDeleteProject(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Delete Post\")));\n  } else {\n    return React.createElement(\"div\", {\n      className: \"container center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Loading timesheet...\"));\n  }\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  // console.log(state);\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.timesheets;\n  const project = projects ? projects[id] : null;\n  return {\n    project: project,\n    auth: state.firebase.auth\n  };\n}; //const mapDispatchToProps = (dispatch) => {\n//   return {\n//        deleteProject: (project) => dispatch(deleteProject(project))\n//    }\n//}\n\n\nexport default compose(connect(mapStateToProps, {\n  deleteProject\n}), firestoreConnect([{\n  collection: 'timesheets'\n}]))(ProjectDetails);\n{\n  /*\r\n  import React, {Component} from 'react';\r\n  import { Link } from 'react-router-dom';\r\n  import { connect } from 'react-redux';\r\n  import { firestoreConnect } from 'react-redux-firebase';\r\n  import { compose } from 'redux'; \r\n  import { Redirect } from 'react-router-dom';\r\n  import moment from 'moment';\r\n  import { deleteProject} from '../../store/actions/projectActions';\r\n  \n  \n  \n  class ProjectDetails extends Component {\r\n  \n     renderButtons(project) {\r\n     if (this.props.auth.uid === project.authorId) {\r\n       return (\r\n         <div id=\"update-buttons\">\r\n           <button className=\"btn orange lighten-2 z-depth-o\">\r\n             <Link id=\"update-button\" to={\"/update/\" + this.props.projectId} className=\"white-text\">\r\n               Update\r\n             </Link>\r\n           </button>\r\n           <button\r\n             onClick={this.onDeleteProject.bind(this)}\r\n             className=\"btn orange lighten-2 z-depth-o\"\r\n           >\r\n             Delete\r\n           </button>\r\n         </div>\r\n       );\r\n     }\r\n   }\r\n  \n   onDeletePost() {\r\n     this.props.deleteProject(this.props.projectId, () => {});\r\n     this.props.history.push(\"/\");\r\n   }\r\n   \r\n  \n   render() {\r\n     const { project, auth } = this.props;\r\n     if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n     if (project) {\r\n       return (\r\n         <div className=\"container section project-details\">\r\n         <div className=\"card z-depth-0\">\r\n             <div className=\"card-content\">\r\n                 <span className=\"card-title\">Start Time: {project.startTime }</span>\r\n                 <span className=\"card-title\">End Time: {project.endTime }</span>\r\n             </div>\r\n             <div className=\"card-action grey lighten-4 grey-text\">\r\n                 <div>Posted by {project.authorFirstName} {project.authorLastName} </div>\r\n                 <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\r\n             </div>\r\n             <div className=\"input-field\">{this.renderButtons(project)}</div>\r\n             </div>\r\n             </div>\r\n             );\r\n           } else {\r\n             return (\r\n               <div className=\"container center\">\r\n               <p>Loading timesheet...</p>\r\n           </div>\r\n             );\r\n           }\r\n         }\r\n       }\r\n       \r\n       const mapStateToProps = (state, ownProps) => {\r\n         const id = ownProps.match.params.id;\r\n         const projects = state.firestore.data.projects;\r\n         const project = projects ? projects[id] : null;\r\n         return {\r\n           project: project,\r\n           auth: state.firebase.auth,\r\n           projectId: id\r\n         };\r\n       };\r\n       \r\n       export default compose(\r\n         connect(\r\n           mapStateToProps,\r\n           { deleteProject}\r\n         ),\r\n         firestoreConnect([{ collection: \"timesheets\" }])\r\n       )(ProjectDetails);\r\n       */\n}","map":{"version":3,"sources":["C:/Users/Sizwe Hugo/Desktop/Younglings TimeKeeper/YounglingsTimekeeper-master/src/components/projects/ProjectDetails.js"],"names":["React","Link","connect","firestoreConnect","compose","Redirect","moment","deleteProject","ProjectDetails","props","onDeleteProject","id","then","catch","err","console","log","project","auth","uid","startTime","endTime","authorFirstName","authorLastName","createdAt","toDate","toString","calendar","e","mapStateToProps","state","ownProps","match","params","projects","firestore","data","timesheets","firebase","collection"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux'; \r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { deleteProject} from '../../store/actions/projectActions';\r\n\r\nconst ProjectDetails = (props) => {\r\n\r\n    const onDeleteProject = (id) => {\r\n        //delete post\r\n        props.deleteProject(id)\r\n        .then(() => {\r\n         return <Redirect to=\"/\"/>;\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    \r\n\r\n    const { project, auth} = props;\r\n    if (!auth.uid) return <Redirect to='/signin' />\r\n    if (project) {\r\n        return (\r\n        <div className=\"container section project-details\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Start Time: { project.startTime }</span>\r\n                    <span className=\"card-title\">End Time: { project.endTime }</span>\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                    <div>Posted by {project.authorFirstName} {project.authorLastName} </div>\r\n                    <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\r\n                </div>\r\n                <Link to=\"/update/:id\"><button>update</button></Link>\r\n                <button className=\"delete\" onClick={(e) => onDeleteProject()}>Delete Post</button>\r\n            </div>\r\n        </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"container center\">\r\n                <p>Loading timesheet...</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    // console.log(state);\r\n    const id = ownProps.match.params.id;\r\n    const projects = state.firestore.data.timesheets;\r\n    const project = projects ? projects[id] : null\r\n    return {\r\n        project: project,\r\n        auth: state.firebase.auth\r\n    }\r\n}\r\n\r\n//const mapDispatchToProps = (dispatch) => {\r\n//   return {\r\n//        deleteProject: (project) => dispatch(deleteProject(project))\r\n//    }\r\n//}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{ deleteProject}),\r\n    firestoreConnect([\r\n        { collection: 'timesheets'}\r\n    ])\r\n)(ProjectDetails);\r\n\r\n\r\n\r\n\r\n\r\n\r\n{/*\r\nimport React, {Component} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { firestoreConnect } from 'react-redux-firebase';\r\nimport { compose } from 'redux'; \r\nimport { Redirect } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { deleteProject} from '../../store/actions/projectActions';\r\n\r\n\r\n\r\nclass ProjectDetails extends Component {\r\n\r\n    renderButtons(project) {\r\n    if (this.props.auth.uid === project.authorId) {\r\n      return (\r\n        <div id=\"update-buttons\">\r\n          <button className=\"btn orange lighten-2 z-depth-o\">\r\n            <Link id=\"update-button\" to={\"/update/\" + this.props.projectId} className=\"white-text\">\r\n              Update\r\n            </Link>\r\n          </button>\r\n          <button\r\n            onClick={this.onDeleteProject.bind(this)}\r\n            className=\"btn orange lighten-2 z-depth-o\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  onDeletePost() {\r\n    this.props.deleteProject(this.props.projectId, () => {});\r\n    this.props.history.push(\"/\");\r\n  }\r\n  \r\n\r\n  render() {\r\n    const { project, auth } = this.props;\r\n    if (!auth.uid) return <Redirect to=\"/signin\" />;\r\n    if (project) {\r\n      return (\r\n        <div className=\"container section project-details\">\r\n        <div className=\"card z-depth-0\">\r\n            <div className=\"card-content\">\r\n                <span className=\"card-title\">Start Time: {project.startTime }</span>\r\n                <span className=\"card-title\">End Time: {project.endTime }</span>\r\n            </div>\r\n            <div className=\"card-action grey lighten-4 grey-text\">\r\n                <div>Posted by {project.authorFirstName} {project.authorLastName} </div>\r\n                <div>{moment(project.createdAt.toDate().toString()).calendar()}</div>\r\n            </div>\r\n            <div className=\"input-field\">{this.renderButtons(project)}</div>\r\n            </div>\r\n            </div>\r\n            );\r\n          } else {\r\n            return (\r\n              <div className=\"container center\">\r\n              <p>Loading timesheet...</p>\r\n          </div>\r\n            );\r\n          }\r\n        }\r\n      }\r\n      \r\n      const mapStateToProps = (state, ownProps) => {\r\n        const id = ownProps.match.params.id;\r\n        const projects = state.firestore.data.projects;\r\n        const project = projects ? projects[id] : null;\r\n        return {\r\n          project: project,\r\n          auth: state.firebase.auth,\r\n          projectId: id\r\n        };\r\n      };\r\n      \r\n      export default compose(\r\n        connect(\r\n          mapStateToProps,\r\n          { deleteProject}\r\n        ),\r\n        firestoreConnect([{ collection: \"timesheets\" }])\r\n      )(ProjectDetails);\r\n      */}\r\n"]},"metadata":{},"sourceType":"module"}